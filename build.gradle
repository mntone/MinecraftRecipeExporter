buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

group= "mntone.recipeexporter" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcrecipeexporter"
sourceCompatibility = targetCompatibility = "1.8"

ext.configFile = file "build.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

def buildNumber = System.getenv("BUILD_NUMBER") ?: "0"
version = "${project.config.mod.version}." + buildNumber
println "Starting build for $archivesBaseName $version for MC ${config.mc.version}-${config.forge.version}"

minecraft {
    version = config.mc.version + "-" + config.forge.version
    runDir = "run"
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", config.mc.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
                
        // replace version and mcversion
        expand "version": project.version, 'mcversion': config.mc.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes "FMLAT": "recipeexporter_at.cfg"
    }
}